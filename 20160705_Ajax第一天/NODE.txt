->之前我们学习的JS都是依托在浏览器里面运行的:首先需要有一个HTML页面,我们在HTML页面中引入我们的JS,当浏览器加载我们的HTML代码的时候也会把JS代码进行解析和渲染,从而实现对应的功能

->浏览器渲染HTML、CSS、JS、IMG等，都是通过自身的渲染引擎实现的(谷歌浏览器的渲染引擎是V8引擎(webkit)；狐火浏览器的渲染引擎是Gecko；IE浏览器的渲染引擎是Trident...)

1、什么是NODE
   NODE不是一门新的技术,它只是一个平台或者一个环境,提供JS代码运行的环境,可以让我们的JS脱离浏览器的束缚运行在服务器端,从而实现使用JS语言开发后台程序(在没有NODE之前我们开发后台需要用的语言:JAVA、.NET、C#、C++、PHP、Ruby、Python...)

  ->NODE环境是基于谷歌浏览器的V8引擎渲染JS的(快)
  ->单线程、基于事件驱动的、异步编程
  ->无阻塞的I/O操作(文件的读写):JS运行在客户端的浏览器中是不能够进行文件读取的,这样才能保证客户信息的安全;但是我们可以在服务器上搭建NODE环境,把我们的JS运行在NODE环境中对服务器中本地文件进行读取;

2、如何在NODE环境中运行我们的JS代码?
  ->在当前文件夹中“shift+右键在此处打开命令窗口”，在DOS窗口中执行 node xxx.js 这样就可以把当前JS文件中的代码执行了

  ->直接通过WebStorm中的NODE执行JS:在JS文件中右键 Run xxx.js

  ->通过REPL终端命令工具来执行我们的JS代码

3、NODE中的模块
  ->内置模块:NODE环境天生自带的 fs、http、url...

  ->自定义模块:自己编写的模块 在NODE中我们新创建一个JS文件就相当于新创建了一个模块

  ->第三方模块:别人编写的模块我来使用:我们使用npm这个命令来管理第三方模块(https://www.npmjs.com/)



需求:
我需要创建三个模块
test1:
  ->sum任意数求和

test2:
  ->sum把一个数字传递进来,我们返回当前传递进来的数字的平方

test3
  ->fn:首先调取test1中的sum方法对 1,2,3,4 实现求和；其次调取test2中sum方法把上一次求出的和平方；最后把平方后的结果+100输出


我们通过以下的代码创建了一个服务并且监听了80端口,客户端怎么访问呢?
var sv= http.createServer() / sv.listen(80)

->http://localhost:80/ (本机虚拟域名:localhost)

->http://192.168.0.20:80/ (本机IP)


