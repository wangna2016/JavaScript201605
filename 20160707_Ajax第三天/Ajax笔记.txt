Ajax的核心只有三步:
->创建一个Ajax对象  var xhr = new XMLHttpRequest; (创建卫星)
->配置一些需要使用的参数 xhr.open(["HTTP METHOD"],["URL"],[true/false]); (给卫星加燃料)
->发送请求 xhr.send(); (发射卫星)

只有执行了xhr.send,我们当前的Ajax请求才算刚刚开始(在没有执行这句话之前,我们的Ajax还没有正式的开始),开始后,我们通过预先配置的URL地址找到对应的服务器,服务器接收到请求后,把相关的数据返回,此时的Ajax结束

->我们在前面课程中提到的xhr.onreadystatechange仅仅是用来监听请求的各阶段,并且让我们自己能够在JS中获取到服务器返回的内容(它不属于必须要写的,不是核心的步骤,只有当在JS中想要获取到服务器端返回的数据我们才编写)





->我们可以通过NODE中的以下方法重写响应头信息(响应起始行和响应首部(内置的响应首部的修改以及我们自定义的响应首部))
response.writeHead:在NODE环境中使用JS方法重写服务器的响应头信息([HTTP STATUES]、[object 包含了我们需要重写的响应首部内容])

response.writeHead(200, {
    'content-type': suffixMIME + ';charset=utf-8;',
    'zhufengTeacher':'zhouxiaotian'
});


->获取数据的接口地址和获取资源文件不太一样
  获取资源文件首先需要服务器上有对应的文件,而且在获取的时候我们在浏览器地址栏中输入的文件目录和名称一般情况下都是和服务器上文件存储的目录是对应的

  数据的请求地址是客户端和服务器端共同协商定制的(一般情况下也是后台开发人员自己随便定义的)，地址一但被定义出来，不管定义的好还是坏，那么后台和前端开发人员都按照同一个地址规范开发即可：服务器按照这个地址实现接收请求和返回数据；客户端按照这个地址实现发送请求和接收数据；
  http://192.168.0.20:666/data/getAllData